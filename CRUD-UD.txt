///////////////////////////////////////////////
// PARA EJECUTAR EN LA CONSOLA DE MONGOSHELL //
///////////////////////////////////////////////

// Nos dirigimos a la base de datos "colegio"
use "colegio";

// 1. Insertar cinco documentos más en la colección estudiantes con los siguientes datos:
db.estudiantes.insertMany([
  { nombre: "Pablo", edad: 25 },
  { nombre: "Juan", edad: 22 },
  { nombre: "Lucia", edad: 25 },
  { nombre: "Juan", edad: 29 },
  { nombre: "Fede", edad: 35 }
]);

// 2. Listar todos los documentos de la colección estudiantes ordenados por edad descendente
db.estudiantes.find({}).sort({edad: -1})

// 3. Listar el estudiante más joven
db.estudiantes.find({}).sort({edad: 1}).limit(1)

// 4. Listar el segundo estudiante más joven
db.estudiantes.find({}).sort({edad: 1}).skip(1).limit(1)

// 5. Listar los estudiantes llamados 'Juan'
db.estudiantes.find({nombre: 'Juan'})

// 6. Listar los estudiantes llamados 'Juan' que tengan 29 años
db.estudiantes.find({nombre: 'Juan', edad: 29})

// 7. Listar los estudiantes llamados 'Juan' ó 'Lucia'
db.estudiantes.find({$or: [{nombre: 'Juan'}, {nombre: 'Lucia'}]})

// 8. Listar los estudiantes que tengan más de 25 años
db.estudiantes.find({edad: {$gt: 25}})

// 9. Listar los estudiantes que tengan 25 años ó menos
db.estudiantes.find({edad: {$lte: 25}})

// 10. Listar los estudiantes que NO tengan 25 años
db.estudiantes.find({edad: {$ne: 25}})

// 11. Listar los estudiantes que estén entre los 26 y 35 años
db.estudiantes.find({edad: {$gte: 26, $lte: 35}})

// 12. Actualizar la edad de Fede a 36 años, listando y verificando que no aparezca en el último listado
db.estudiantes.updateOne({nombre: 'Fede'}, {$set: {edad: 36}})
db.estudiantes.find({}).sort({edad: 1})

// 13. Actualizar todas las edades de 25 años a 26 años, listando y verificando que aparezcan en el último listado
db.estudiantes.updateMany({edad: 25}, {$set: {edad: 26}})
db.estudiantes.find({}).sort({edad: 1})

// 14. Borrar los estudiantes que se llamen 'Juan' y listar verificando el resultado
db.estudiantes.deleteMany({nombre: 'Juan'})
db.estudiantes.find({})

// 15. Eliminar todos los documentos de estudiantes que hayan quedado con algún valor
db.estudiantes.deleteMany({})
db.estudiantes.find({})
